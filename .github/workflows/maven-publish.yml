# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: |
          export MAVEN_OPTS="-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=${GITHUB_WORKSPACE}/.m2/repository -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
          MAVEN_CLI_OPTS="--batch-mode --errors --fail-at-end --show-version --no-transfer-progress --no-snapshot-updates"
          cd frontend
          mvn $MAVEN_CLI_OPTS clean
          mvn $MAVEN_CLI_OPTS package
          cd ..

    - name: Publish to GitHub Packages Apache Maven
      run: |
          export MAVEN_OPTS="-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=${GITHUB_WORKSPACE}/.m2/repository -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
          MAVEN_CLI_OPTS="--batch-mode --errors --fail-at-end --show-version --no-transfer-progress --no-snapshot-updates"
          cd frontend
          mvn $MAVEN_CLI_OPTS deploy -s $GITHUB_WORKSPACE/settings.xml
          cd ..
      env:
        GITHUB_TOKEN: ${{ github.token }}
